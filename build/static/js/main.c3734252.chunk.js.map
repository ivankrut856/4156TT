{"version":3,"sources":["index.js"],"names":["App","props","state","input","result","calculate","bind","onInputChange","e","id","newValue","target","value","this","setState","oldInput","input1","input2","as","split","length","a","bs","b","n","m","dp","Array","par","i","j","Infinity","cost","result1","result2","reverse","join","concat","calculateResult","onChange","onClick","className","React","Component","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c3734252.chunk.js","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\n\n\nclass App extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            input: [\"\", \"\"],\n            result: \"No result\"\n        };\n\n        this.calculate = this.calculate.bind(this);\n        this.onInputChange = this.onInputChange.bind(this);\n    }\n\n    onInputChange(e, id) {\n        const newValue = e.target.value;\n        this.setState((state) => {\n            let oldInput = state.input;\n            oldInput[id] = newValue;\n            return {\n                input: oldInput\n            };\n        });\n    }\n\n    calculateResult(input1, input2) {\n        let as = input1.split('\\n');\n        if (as.length < 2) {\n            return \"Empty the 2nd line of the 1st input\";\n        }\n        let a = as[1];\n        let bs = input2.split('\\n');\n        if (bs.length < 2) {\n            return \"Empty the 2nd line of the 2nd input\";\n        }\n        let b = bs[1];\n\n        let n = a.length;\n        let m = b.length;\n        let dp = new Array(n + 1);\n        let par = new Array(n + 1);\n        for (let i = 0; i <= n; i++) {\n            dp[i] = new Array(m + 1);\n            dp[i][0] = i;\n            par[i] = new Array(m + 1);\n            par[i][0] = \"vertical\";\n            for (let j = 0; j <= m; j++) {\n                dp[i][j] = +Infinity;\n                dp[0][j] = j;\n                par[i][j] = \"none\";\n                par[0][j] = \"horizontal\";\n            }\n\n            par[0][0] = \"none\";\n        }\n\n        for (let i = 1; i <= n; i++) {\n            for (let j = 1; j <= m; j++) {\n                if (dp[i - 1][j] + 1 <= dp[i][j]) {\n                    dp[i][j] = dp[i - 1][j] + 1;\n                    par[i][j] = \"vertical\";\n                }\n                if (dp[i][j - 1] + 1 <= dp[i][j]) {\n                    dp[i][j] = dp[i][j - 1] + 1;\n                    par[i][j] = \"horizontal\";\n                }\n                let cost = a[i] !== b[j];\n                if (dp[i - 1][j - 1] + cost <= dp[i][j]) {\n                    dp[i][j] = dp[i - 1][j - 1] + cost;\n                    par[i][j] = \"diagonal\";\n                }\n            }\n        }\n\n        let result1 = \"\";\n        let result2 = \"\";\n        let i = n, j = m;\n        while (par[i][j] !== \"none\") {\n            if (par[i][j] === \"diagonal\") {\n                i--;\n                j--;\n                result1 += a[i];\n                result2 += b[j];\n            }\n            else if (par[i][j] === \"vertical\") {\n                i--;\n                result1 += a[i];\n                result2 += '-';\n            }\n            else if (par[i][j] === \"horizontal\") {\n                j--;\n                result2 += b[j];\n                result1 += '-';\n            }\n            else {\n                // eslint-disable-next-line no-throw-literal\n                throw \"Wrong execution state\";\n            }\n        }\n\n        result1 = result1.split(\"\").reverse().join(\"\");\n        result2 = result2.split(\"\").reverse().join(\"\");\n        return \"\".concat(result1, \"\\n\", result2);\n    }\n\n    calculate() {\n        const result = this.calculateResult(this.state.input[0], this.state.input[1]);\n        this.setState({\n            result: result\n        });\n    }\n\n    render() {\n        return <div>\n            <textarea onChange={(e) => this.onInputChange(e, 0)}/><br/>\n            <textarea onChange={(e) => this.onInputChange(e, 1)}/><br/>\n            <button onClick={this.calculate}>Calculate</button><br/>\n            <pre><label className=\"display-linebreak\">{this.state.result}</label></pre>\n        </div>\n    }\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}